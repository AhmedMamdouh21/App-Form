{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app-form';\n  signupForm: FormGroup;\n  phonePattern = /^[0-9]{10,12}$/;\n  // passwordPattern = /^[0-8]{8,30}$/;\n\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      'username': new FormControl(null, Validators.required),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'phone': new FormControl('', [Validators.required, Validators.pattern(this.phonePattern)]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(8)]),\n      'hobbies': new FormArray([])\n      // 'password': new FormControl(null, Validators.required)\n    })\n  }\n  \n  onSubmit() {\n    console.log(this.signupForm);\n  }\n\n  onAddHobbies() {\n    const control = new FormControl(null, Validators.required);\n    (<FormArray>this.signupForm.get('hobbies')).push(control);\n  }\n  getControls() {\n      return (<FormArray>this.signupForm.get('hobbies')).controls;\n  }\n\n}\n\n","<div class=\"container\">\n    <div class=\"row py-md-5 py-3 min-vh-100 align-items-center justify-content-center\">\n        <div class=\"col-md-8 p-5 form-wrap\">\n            <h1 class=\"text-white text-center mb-5\">Sign Up</h1>\n            <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"username\">\n                    <label for=\"username\">Username</label>\n                    <small class=\"form-text text-danger\" *ngIf=\"!signupForm.get('username').valid && signupForm.get('username').touched\">Please Enter Your Name</small>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n                    <label for=\"email\">Email Address</label>\n                    <span *ngIf=\"!signupForm.get('email').valid && signupForm.get('email').touched\">\n                        <small class=\"text-danger\" *ngIf=\"signupForm.get('email').errors['email']\">This is Email Address is invalid</small>\n                        <small class=\"text-danger\" *ngIf=\"signupForm.get('email').errors['required']\">This is Email Address is Required</small>\n                    </span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"number\" class=\"form-control\" formControlName=\"phone\">\n                    <label for=\"phone\">Mobile</label>\n                    <span *ngIf=\"!signupForm.get('phone').valid && signupForm.get('phone').touched\">\n                        <small class=\"text-danger\" *ngIf=\"signupForm.get('phone').errors['pattern']\">This is Mobile is invalid</small>\n                        <small class=\"text-danger\" *ngIf=\"signupForm.get('phone').errors['required']\">This is Mobile is Required</small>\n                    </span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                    <label for=\"\">Password</label>\n                    <span *ngIf=\"!signupForm.get('password').valid && signupForm.get('password').touched\">\n                        <small class=\"text-danger\" *ngIf=\"signupForm.get('password').errors['minlength']\">Use 8 or more characters or numbers for your password</small>\n                        <small class=\"text-danger\" *ngIf=\"signupForm.get('password').errors['required']\">This is Password is Required</small>\n                    </span>\n                </div>\n                <div class=\"mb-3\" formArrayName=\"hobbies\">\n                    <button class=\"btn btn-outline-dark text-white mb-3\" type=\"button\" (click)=\"onAddHobbies()\">Add Hobby</button>\n                    <div class=\"form-group\" *ngFor=\"let hobbyControl of getControls(); let i = index\">\n                        <input type=\"text\" class=\"form-control\" [formControlName]=\"i\">\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-end\">\n                    <button class=\"btn btn-submit\" type=\"submit\" [disabled]=\"!signupForm.valid\">\n                        <span class=\"btn-anim-top-right\"></span>\n                        <span class=\"btn-anim-bottom-left\"></span>\n                        Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}